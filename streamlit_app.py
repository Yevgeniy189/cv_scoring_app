import streamlit as st
import openai
from parse_hh import get_html, extract_vacancy_data, extract_resume_data

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—é–º–µ –∏ –≤–∞–∫–∞–Ω—Å–∏–∏", layout="centered")
st.title("üîç –ê–Ω–∞–ª–∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∫–∞–Ω–¥–∏–¥–∞—Ç–∞ –≤–∞–∫–∞–Ω—Å–∏–∏")

# –í–≤–æ–¥ –¥–≤—É—Ö —Å—Å—ã–ª–æ–∫
job_url = st.text_input("üîó –í—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é (hh.ru)")
resume_url = st.text_input("üîó –í—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ä–µ–∑—é–º–µ (hh.ru)")

# OpenAI API (–≤—Å—Ç–∞–≤—å —Å–≤–æ–π –∫–ª—é—á)
client = openai.OpenAI(api_key=st.secrets["openai"]["api_key"])

# –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞
if st.button("üöÄ –û—Ü–µ–Ω–∏—Ç—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ"):
    if not job_url or not resume_url:
        st.warning("‚ùó –í—Å—Ç–∞–≤—å –æ–±–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ hh.ru")
    else:
        try:
            with st.spinner("üì• –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å hh.ru..."):
                job_html = get_html(job_url).text
                resume_html = get_html(resume_url).text

                job_description = extract_vacancy_data(job_html)
                resume_text = extract_resume_data(resume_html)

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–µ —á–∞—Å—Ç–∏
            st.subheader("üìÑ –í–∞–∫–∞–Ω—Å–∏—è")
            st.markdown(job_description)

            st.subheader("üë§ –†–µ–∑—é–º–µ")
            st.markdown(resume_text)

            with st.spinner("ü§ñ GPT –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç..."):
                system_prompt = """
                –¢—ã HR-—ç–∫—Å–ø–µ—Ä—Ç. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π, –Ω–∞—Å–∫–æ–ª—å–∫–æ –∫–∞–Ω–¥–∏–¥–∞—Ç –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ–¥ –≤–∞–∫–∞–Ω—Å–∏—é.
                –î–∞–π:
                1. –ö—Ä–∞—Ç–∫–∏–π —Ä–∞–∑–±–æ—Ä (—Å–∏–ª—å–Ω—ã–µ/—Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã)
                2. –û—Ç–¥–µ–ª—å–Ω–æ –æ—Ü–µ–Ω–∏ –∫–∞—á–µ—Å—Ç–≤–æ –æ–ø–∏—Å–∞–Ω–∏—è –æ–ø—ã—Ç–∞ –≤ —Ä–µ–∑—é–º–µ
                3. –ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –æ—Ç 1 –¥–æ 10
                """

                user_prompt = f"–í–∞–∫–∞–Ω—Å–∏—è:\n{job_description}\n\n–†–µ–∑—é–º–µ:\n{resume_text}"

                response = client.chat.completions.create(
                    model="gpt-4o-mini",
                    messages=[
                        {"role": "system", "content": system_prompt},
                        {"role": "user", "content": user_prompt}
                    ],
                    max_tokens=1000,
                    temperature=0
                )
                result = response.choices[0].message.content

            st.success("‚úÖ –ê–Ω–∞–ª–∏–∑ –≥–æ—Ç–æ–≤")
            st.markdown(result)

        except Exception as e:
            st.error(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
